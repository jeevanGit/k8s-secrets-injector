---
apiVersion: v1
kind: Pod
metadata:
  name: vault-agent
  labels:
    aadpodidbinding: pod-selector-label

spec:
  serviceAccountName: ${SERVICEACCOUNT}
  restartPolicy: Always
  volumes:
    - name: vault-token
      emptyDir:
        medium: Memory
    - name: shared-data
      emptyDir: {}

  containers:
    - name: injector
      image: securityopregistrytest.azurecr.io/secret-injector:v1alpha4
      imagePullPolicy: Always
      env:
        - name: hashicorpvault
          value: ${HC_IP}
        - name: VAULT_ROLE
          value: ${VAULT_ROLE}
        - name: SERVICEACCOUNT
          value: ${SERVICEACCOUNT}

        - name: MYSQL_CREDS
          value: secret/${APP_NAME}/${NAMESPACE}/db2@hashicorpvault
        - name: MYDB2_CREDS
          value: secret/${APP_NAME}/${NAMESPACE}/mysql@hashicorpvault

        - name: SECRET_INJECTOR_SECRET_NAME_secret_mysql
          value: secret/${APP_NAME}/${NAMESPACE}/mysql
        - name: SECRET_INJECTOR_MOUNT_PATH_secret_mysql
          value: /etc/secrets
        - name: SECRET_INJECTOR_SECRET_NAME_creds_db2
          value: secret/${APP_NAME}/${NAMESPACE}/db2
        - name: SECRET_INJECTOR_MOUNT_PATH_creds_db2
          value: /etc/secrets

        - name: VAULT_TOKEN_PATH
          value: "/home/vault/.vault-token"
        - name: VAULT_REAUTH
          value: "true"
        - name: VAULT_AUTH_MOUNT_PATH
          value: "kubernetes"
        - name: SERVICE_ACCOUNT_TOKEN_PATH
          value: "/var/run/secrets/kubernetes.io/serviceaccount/token"

        - name: debug
          value: "true"
        - name: VAULT_SKIP_VERIFY
          value: "true"

        - name: AzureKeyVault
          value: aks-AC0001-keyvault
        - name: env_secret_name
          value: "secret1@AzureKeyVault"

      volumeMounts:
        - name: vault-token
          mountPath: /azure-keyvault
        - name: shared-data
          mountPath: /etc/secrets
